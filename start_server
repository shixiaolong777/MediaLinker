#!/bin/bash
# shellcheck shell=bash
# shellcheck disable=SC2016
# shellcheck disable=SC2154
# 自动更新
if [[ "${AUTO_UPDATE}" = "true" ]];then
  echo "The automatic update is detected, and the main program is being updated...."
  cd /embyExternalUrl && git pull
  echo "The main program update is complete."
else
  if [[ -z "${GIT_COMMIT_HASH}" ]];then
    echo "The GIT_COMMIT_HASH environment variable is not set, will not update the main program."
  else
    echo "The GIT_COMMIT_HASH environment variable is set, the main program is being updated to the specified commit hash ${GIT_COMMIT_HASH}..."
    cd /embyExternalUrl && git checkout ${GIT_COMMIT_HASH}
    echo "The main program checkout is complete."
  fi
fi

# 软链接ngx_http_js_module.so
if [ ! -e "/etc/nginx/modules/ngx_http_js_module.so" ]; then
  ln -s /usr/lib/nginx/modules/ngx_http_js_module.so /etc/nginx/modules/ngx_http_js_module.so
fi

# emby
if [ "${SERVER}" = "emby" ]; then
  echo "The emby service is detected, and the configuration file is being linked...."
  # 删除原有配置文件
  rm -rf /etc/nginx/conf.d /etc/nginx/nginx.conf
  # 根据服务获取不同的配置文件
  cp -rf /embyExternalUrl/emby2Alist/nginx/conf.d /etc/nginx/conf.d
  cp -rf /embyExternalUrl/emby2Alist/nginx/nginx.conf /etc/nginx/nginx.conf
fi

# plex
if [ "${SERVER}" = "plex" ]; then
  echo "The plex service is detected, and the configuration file is being linked...."
  # 删除原有配置文件
  rm -rf /etc/nginx/conf.d /etc/nginx/nginx.conf
  # 根据服务获取不同的配置文件
  cp -rf /embyExternalUrl/plex2Alist/nginx/conf.d /etc/nginx/conf.d
  cp -rf /embyExternalUrl/plex2Alist/nginx/nginx.conf /etc/nginx/nginx.conf
fi

# 判断是否存在配置文件，不存在则创建
if [ ! -e "/opt/constant.js" ]; then
  echo "The configuration file is not mapped, creating a new one..."
  if [ "${SERVER}" = "plex" ]; then
    cp /embyExternalUrl/plex2Alist/nginx/conf.d/exampleConfig/constant-all.js /opt/constant.js
  elif [ "${SERVER}" = "emby" ]; then
    cp /embyExternalUrl/emby2Alist/nginx/conf.d/exampleConfig/constant-all.js /opt/constant.js
  else
    echo "The server is not specified, please specify the server name in the environment variable SERVER."
    exit 1
  fi
fi

# 软连接配置文件
if [ ! -h "/etc/nginx/conf.d/constant.js" ]; then
  rm -rf /etc/nginx/conf.d/constant.js
  ln -s /opt/constant.js /etc/nginx/conf.d/constant.js
fi

# nginx日志输出到stdout
if [[ -z "${NGINX_LOG_LEVEL}" ]]; then
  if ! grep -q "error_log /dev/stdout info;" /etc/nginx/nginx.conf; then
    sed -i '/pid\s*\/var\/run\/nginx.pid;/i error_log /dev/stdout info;' /etc/nginx/nginx.conf
  fi
  if ! grep -q "access_log /dev/stdout main;" /etc/nginx/nginx.conf; then
    sed -i '/sendfile\s*on;/i\    access_log /dev/stdout main;' /etc/nginx/nginx.conf
  fi
else
  if [[ "${NGINX_LOG_LEVEL}" == "error" ]]; then
    if ! grep -q "error_log /dev/stdout info;" /etc/nginx/nginx.conf; then
      sed -i '/pid\s*\/var\/run\/nginx.pid;/i error_log /dev/stdout info;' /etc/nginx/nginx.conf
    fi
  elif [[ "${NGINX_LOG_LEVEL}" == "access" ]]; then
    if ! grep -q "access_log /dev/stdout main;" /etc/nginx/nginx.conf; then
      sed -i '/sendfile\s*on;/i\    access_log /dev/stdout main;' /etc/nginx/nginx.conf
    fi
  elif [[ "${NGINX_LOG_LEVEL}" == "all" ]]; then
    if ! grep -q "error_log /dev/stdout info;" /etc/nginx/nginx.conf; then
      sed -i '/pid\s*\/var\/run\/nginx.pid;/i error_log /dev/stdout info;' /etc/nginx/nginx.conf
    fi
    if ! grep -q "access_log /dev/stdout main;" /etc/nginx/nginx.conf; then
      sed -i '/sendfile\s*on;/i\    access_log /dev/stdout main;' /etc/nginx/nginx.conf
    fi
  fi
fi

# 确保环境变量已定义
if [ -z "${NGINX_PORT}" ]; then
    echo "Error: NGINX_PORT is not set."
    exit 1
fi
if [ -n "${SSL_ENABLE}" ] && [ "${SSL_ENABLE}" = "true" ] && [ -z "${NGINX_SSL_PORT}" ]; then
    echo "Error: NGINX_SSL_PORT is not set while SSL is enabled."
    exit 1
fi
if [ -z "${SERVER}" ]; then
    echo "Error: SERVER variable is not set."
    exit 1
fi
if [ ! -f "/etc/nginx/conf.d/${SERVER}.conf" ]; then
    echo "Error: Configuration file /etc/nginx/conf.d/${SERVER}.conf does not exist."
    exit 1
fi

# 替换端口
sed -i "s/8091/${NGINX_PORT}/g" "/etc/nginx/conf.d/includes/http.conf"
if [ -n "${NGINX_SSL_PORT}" ]; then
    sed -i "s/8095/${NGINX_SSL_PORT}/g" "/etc/nginx/conf.d/includes/https.conf"
fi

# SSL 开启
if [ "${SSL_ENABLE}" = "true" ]; then
    sed -i '/#\s*include \/etc\/nginx\/conf.d\/includes\/https\.conf;/s/^#//' /etc/nginx/conf.d/${SERVER}.conf
    grep -q "include /etc/nginx/conf.d/includes/https.conf;" /etc/nginx/conf.d/${SERVER}.conf || \
        echo "include /etc/nginx/conf.d/includes/https.conf;" >> /etc/nginx/conf.d/${SERVER}.conf
    echo "SSL is enabled, the https.conf file has been included."
fi

# 检查 Nginx 配置并启动
nginx -t || exit 1
nginx -g "daemon off;"
